/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MoneyGameFiles;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author scuba
 */
public class MainWindow extends javax.swing.JFrame {

    public static final String PASSWORD = "babelfish";

    public MainWindow() {
        initComponents();
        //Done in constructor so the values are not null
        answer_button_list = new JButton[]{answerButton1, answerButton2, answerButton3, answerButton4};
        questionImageList = new JLabel[]{questionImage1, questionImage2, questionImage3, questionImage4};
        level_number_labels_list = new JLabel[]{jLabel9, jLabel11, jLabel10, jLabel13, jLabel12};
        answer_button_list_test = new JButton[]{answerButton8, answerButton7, answerButton6, answerButton5};
        questionImageListTest = new JLabel[]{questionImage5, questionImage6, questionImage7, questionImage8};
        reset_GUIs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        Log_inPnl = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        LginButton = new javax.swing.JButton();
        invalidLabel = new javax.swing.JLabel();
        PlayPnl = new javax.swing.JPanel();
        plyButton = new javax.swing.JButton();
        exsrcButton = new javax.swing.JButton();
        checkScoresBtn = new javax.swing.JButton();
        playPnlBackButton = new javax.swing.JButton();
        GamePnlTest = new javax.swing.JPanel();
        questionImage5 = new javax.swing.JLabel();
        answerButton5 = new javax.swing.JButton();
        nextQuestion1 = new javax.swing.JButton();
        answerButton6 = new javax.swing.JButton();
        answerButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        questionText1 = new javax.swing.JTextArea();
        answerButton8 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        questionImage6 = new javax.swing.JLabel();
        questionImage7 = new javax.swing.JLabel();
        questionImage8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        userMessage1 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        backGamePnlTest = new javax.swing.JButton();
        GamePnlPractice = new javax.swing.JPanel();
        questionImage1 = new javax.swing.JLabel();
        answerButton4 = new javax.swing.JButton();
        nextQuestion = new javax.swing.JButton();
        answerButton3 = new javax.swing.JButton();
        answerButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionText = new javax.swing.JTextArea();
        answerButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        level5button = new javax.swing.JButton();
        level4button = new javax.swing.JButton();
        level3button = new javax.swing.JButton();
        level2button = new javax.swing.JButton();
        level1button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        questionImage2 = new javax.swing.JLabel();
        questionImage3 = new javax.swing.JLabel();
        questionImage4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        userMessage = new javax.swing.JTextArea();
        backGamePnl = new javax.swing.JButton();
        ScoresPnl = new javax.swing.JPanel();
        scoresPanelBack = new javax.swing.JButton();
        scoresTextAreaScrollPane = new javax.swing.JScrollPane();
        scoresTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game ");

        jPanel1.setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        jLabel2.setText("User Name: ");

        passwordLabel.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        passwordLabel.setText("Password:");

        userNameTextField.setFont(new java.awt.Font("Superclarendon", 1, 20)); // NOI18N
        userNameTextField.setMinimumSize(new java.awt.Dimension(243, 49));
        userNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextFieldActionPerformed(evt);
            }
        });
        userNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userNameTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userNameTextFieldKeyTyped(evt);
            }
        });

        passwordField.setFont(new java.awt.Font("Superclarendon", 1, 20)); // NOI18N
        passwordField.setMinimumSize(new java.awt.Dimension(243, 49));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });

        LginButton.setFont(new java.awt.Font("Superclarendon", 1, 18)); // NOI18N
        LginButton.setText("Log In ");
        LginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LginButtonActionPerformed(evt);
            }
        });

        invalidLabel.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N

        javax.swing.GroupLayout Log_inPnlLayout = new javax.swing.GroupLayout(Log_inPnl);
        Log_inPnl.setLayout(Log_inPnlLayout);
        Log_inPnlLayout.setHorizontalGroup(
            Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Log_inPnlLayout.createSequentialGroup()
                .addGroup(Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Log_inPnlLayout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addGroup(Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(passwordLabel))
                        .addGap(42, 42, 42)
                        .addGroup(Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addComponent(userNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(invalidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(Log_inPnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(LginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(390, 390, 390))
        );
        Log_inPnlLayout.setVerticalGroup(
            Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Log_inPnlLayout.createSequentialGroup()
                .addGroup(Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Log_inPnlLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Log_inPnlLayout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72)
                .addGroup(Log_inPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(LginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(invalidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(283, Short.MAX_VALUE))
        );

        jPanel1.add(Log_inPnl, "card6");

        plyButton.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        plyButton.setText("Play  ");
        plyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plyButtonActionPerformed(evt);
            }
        });

        exsrcButton.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        exsrcButton.setText("Practice");
        exsrcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exsrcButtonActionPerformed(evt);
            }
        });

        checkScoresBtn.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        checkScoresBtn.setText("Check Scores");
        checkScoresBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkScoresBtnActionPerformed(evt);
            }
        });

        playPnlBackButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        playPnlBackButton.setText("<<Back");
        playPnlBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playPnlBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PlayPnlLayout = new javax.swing.GroupLayout(PlayPnl);
        PlayPnl.setLayout(PlayPnlLayout);
        PlayPnlLayout.setHorizontalGroup(
            PlayPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PlayPnlLayout.createSequentialGroup()
                        .addGap(0, 316, Short.MAX_VALUE)
                        .addGroup(PlayPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayPnlLayout.createSequentialGroup()
                                .addComponent(exsrcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(plyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(321, 321, 321))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayPnlLayout.createSequentialGroup()
                                .addComponent(checkScoresBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(455, 455, 455))))
                    .addGroup(PlayPnlLayout.createSequentialGroup()
                        .addComponent(playPnlBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PlayPnlLayout.setVerticalGroup(
            PlayPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayPnlLayout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addGroup(PlayPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exsrcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(checkScoresBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(playPnlBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(PlayPnl, "card8");

        answerButton5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton5ActionPerformed(evt);
            }
        });

        nextQuestion1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        nextQuestion1.setText("Next Question");
        nextQuestion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQuestion1ActionPerformed(evt);
            }
        });

        answerButton6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton6ActionPerformed(evt);
            }
        });

        answerButton7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton7ActionPerformed(evt);
            }
        });

        questionText1.setColumns(20);
        questionText1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        questionText1.setRows(5);
        jScrollPane3.setViewportView(questionText1);

        answerButton8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton8ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        jLabel7.setText("Answer:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setText("Question:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setText("Levels:");

        userMessage1.setColumns(20);
        userMessage1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        userMessage1.setLineWrap(true);
        userMessage1.setRows(5);
        jScrollPane4.setViewportView(userMessage1);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("1");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("3");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("2");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("5");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("4");

        backGamePnlTest.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        backGamePnlTest.setText("<<Back");
        backGamePnlTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backGamePnlTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GamePnlTestLayout = new javax.swing.GroupLayout(GamePnlTest);
        GamePnlTest.setLayout(GamePnlTestLayout);
        GamePnlTestLayout.setHorizontalGroup(
            GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GamePnlTestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(GamePnlTestLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(597, 597, 597))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GamePnlTestLayout.createSequentialGroup()
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(663, Short.MAX_VALUE))
                    .addGroup(GamePnlTestLayout.createSequentialGroup()
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GamePnlTestLayout.createSequentialGroup()
                                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(questionImage6, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                    .addComponent(questionImage8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(questionImage5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(questionImage7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(backGamePnlTest, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GamePnlTestLayout.createSequentialGroup()
                                .addGap(351, 351, 351)
                                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(GamePnlTestLayout.createSequentialGroup()
                                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(answerButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(answerButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(60, 60, 60)
                                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(answerButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(answerButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel7))
                                .addGap(0, 55, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GamePnlTestLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GamePnlTestLayout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GamePnlTestLayout.createSequentialGroup()
                                        .addComponent(nextQuestion1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(176, 176, 176))))))))
        );
        GamePnlTestLayout.setVerticalGroup(
            GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GamePnlTestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(29, 29, 29)
                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GamePnlTestLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(questionImage5, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(questionImage6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GamePnlTestLayout.createSequentialGroup()
                                .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(questionImage7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(questionImage8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                                .addComponent(backGamePnlTest, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(GamePnlTestLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(GamePnlTestLayout.createSequentialGroup()
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(answerButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(answerButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(GamePnlTestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(answerButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(answerButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(nextQuestion1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1.add(GamePnlTest, "card2");

        answerButton4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton4ActionPerformed(evt);
            }
        });

        nextQuestion.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        nextQuestion.setText("Next Question");
        nextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQuestionActionPerformed(evt);
            }
        });

        answerButton3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton3ActionPerformed(evt);
            }
        });

        answerButton2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton2ActionPerformed(evt);
            }
        });

        questionText.setColumns(20);
        questionText.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        questionText.setRows(5);
        questionText.setPreferredSize(new java.awt.Dimension(1, 1));
        jScrollPane1.setViewportView(questionText);

        answerButton1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        answerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answerButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        jLabel6.setText("Answer:");

        jLabel4.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        jLabel4.setText("Question:");

        level5button.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        level5button.setText("5");
        level5button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level5buttonActionPerformed(evt);
            }
        });

        level4button.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        level4button.setText("4");
        level4button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level4buttonActionPerformed(evt);
            }
        });

        level3button.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        level3button.setText("3");
        level3button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level3buttonActionPerformed(evt);
            }
        });

        level2button.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        level2button.setText("2");
        level2button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level2buttonActionPerformed(evt);
            }
        });

        level1button.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        level1button.setText("1");
        level1button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                level1buttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Superclarendon", 1, 24)); // NOI18N
        jLabel1.setText("Levels:");

        userMessage.setColumns(20);
        userMessage.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        userMessage.setRows(5);
        jScrollPane2.setViewportView(userMessage);

        backGamePnl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        backGamePnl.setText("<<Back");
        backGamePnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backGamePnlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GamePnlPracticeLayout = new javax.swing.GroupLayout(GamePnlPractice);
        GamePnlPractice.setLayout(GamePnlPracticeLayout);
        GamePnlPracticeLayout.setHorizontalGroup(
            GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backGamePnl, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(level1button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(level2button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(level3button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(level4button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(level5button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(349, 349, 349))
                            .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                                .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(answerButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(answerButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(60, 60, 60)
                                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(answerButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(answerButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6))
                                .addGap(63, 63, 63))))
                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(questionImage2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(questionImage4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(questionImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(questionImage3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GamePnlPracticeLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GamePnlPracticeLayout.createSequentialGroup()
                                .addComponent(nextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(183, 183, 183))))))
        );
        GamePnlPracticeLayout.setVerticalGroup(
            GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(level4button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(level3button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(level2button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(level5button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(level1button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(questionImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(questionImage2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(answerButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(answerButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(answerButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(answerButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(nextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                        .addGroup(GamePnlPracticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(questionImage3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(questionImage4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addComponent(backGamePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(GamePnlPracticeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        jPanel1.add(GamePnlPractice, "card2");

        ScoresPnl.setPreferredSize(new java.awt.Dimension(1124, 782));

        scoresPanelBack.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        scoresPanelBack.setText("<<Back");
        scoresPanelBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoresPanelBackActionPerformed(evt);
            }
        });

        scoresTextArea.setColumns(20);
        scoresTextArea.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        scoresTextArea.setRows(5);
        scoresTextAreaScrollPane.setViewportView(scoresTextArea);

        javax.swing.GroupLayout ScoresPnlLayout = new javax.swing.GroupLayout(ScoresPnl);
        ScoresPnl.setLayout(ScoresPnlLayout);
        ScoresPnlLayout.setHorizontalGroup(
            ScoresPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScoresPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ScoresPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ScoresPnlLayout.createSequentialGroup()
                        .addComponent(scoresPanelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scoresTextAreaScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE))
                .addContainerGap())
        );
        ScoresPnlLayout.setVerticalGroup(
            ScoresPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ScoresPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scoresTextAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scoresPanelBack, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(ScoresPnl, "card10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Level button 1    
    private void level1buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level1buttonActionPerformed

        //sets the color for the buttons 
        level1button.setBackground(Color.GREEN);
        level2button.setBackground(null);
        level3button.setBackground(null);
        level4button.setBackground(null);
        level5button.setBackground(null);

        levelNumber = 1;
        randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
        randomNumberArrayListLevel.create_arrayList();
        //to-do: reset score
        Right_Answers = 0;
        Wrong_Answers = 0;
        displayNewThings();


    }//GEN-LAST:event_level1buttonActionPerformed

    // Level button 2
    private void level2buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level2buttonActionPerformed

        //sets the color for the buttons
        level1button.setBackground(null);
        level2button.setBackground(Color.GREEN);
        level3button.setBackground(null);
        level4button.setBackground(null);
        level5button.setBackground(null);

        levelNumber = 2;
        randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
        randomNumberArrayListLevel.create_arrayList();
        Right_Answers = 0;
        Wrong_Answers = 0;
        displayNewThings();
    }//GEN-LAST:event_level2buttonActionPerformed

    // Level button 3
    private void level3buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level3buttonActionPerformed

        //sets the color for the buttons
        level1button.setBackground(null);
        level2button.setBackground(null);
        level3button.setBackground(Color.GREEN);
        level4button.setBackground(null);
        level5button.setBackground(null);

        levelNumber = 3;
        randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
        randomNumberArrayListLevel.create_arrayList();
        Right_Answers = 0;
        Wrong_Answers = 0;
        displayNewThings();
    }//GEN-LAST:event_level3buttonActionPerformed

    // Level button 4
    private void level4buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level4buttonActionPerformed

        //sets the color for the buttons
        level1button.setBackground(null);
        level2button.setBackground(null);
        level3button.setBackground(null);
        level4button.setBackground(Color.GREEN);
        level5button.setBackground(null);

        levelNumber = 4;
        randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
        randomNumberArrayListLevel.create_arrayList();
        Right_Answers = 0;
        Wrong_Answers = 0;
        displayNewThings();
    }//GEN-LAST:event_level4buttonActionPerformed

    // Level button 5
    private void level5buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_level5buttonActionPerformed

        //sets the color for the buttons
        level1button.setBackground(null);
        level2button.setBackground(null);
        level3button.setBackground(null);
        level4button.setBackground(null);
        level5button.setBackground(Color.GREEN);

        levelNumber = 5;
        randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
        randomNumberArrayListLevel.create_arrayList();
        Right_Answers = 0;
        Wrong_Answers = 0;
        displayNewThings();
    }//GEN-LAST:event_level5buttonActionPerformed

    private void answerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton1ActionPerformed
        //if the answer in the answer array at the correct position is right
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(1);
            }
        }
    }//GEN-LAST:event_answerButton1ActionPerformed

    private void answerButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton2ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(2);
            }
        }
    }//GEN-LAST:event_answerButton2ActionPerformed

    private void answerButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton3ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(3);
            }
        }
    }//GEN-LAST:event_answerButton3ActionPerformed

    private void nextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQuestionActionPerformed
        if ((levelNumber != 0 && times_answer_button_clicked >= 1) || (start_level_over_again == true)) {
            displayNewThings();
            times_answer_button_clicked = 0;
        }
    }//GEN-LAST:event_nextQuestionActionPerformed

    private void answerButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton4ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(4);
            }
        }
    }//GEN-LAST:event_answerButton4ActionPerformed

    private void LginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LginButtonActionPerformed
        if (userName != null && userName.equals("") == false) {
            if (userName.equalsIgnoreCase("teacher") == false) {
                checkScoresBtn.setVisible(false);
                Log_inPnl.setVisible(false);
                PlayPnl.setVisible(true);
                userNameTextField.setText("");

            } else {
                
                char[] temp_password = passwordField.getPassword();
                String password = new String(temp_password);
                if (password.equals(PASSWORD) == false) {
                    invalidLabel.setText("Invalid Password");

                } else {
                    checkScoresBtn.setVisible(true);
                    Log_inPnl.setVisible(false);
                    PlayPnl.setVisible(true);
                }
                password = "";
                passwordField.setText("");
            }

        } else {
            invalidLabel.setText("Invalid Username");
            userName = "";
            userNameTextField.setText("");
        }
    }//GEN-LAST:event_LginButtonActionPerformed

    private void exsrcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exsrcButtonActionPerformed

        PlayPnl.setVisible(false);
        GamePnlPractice.setVisible(true);

    }//GEN-LAST:event_exsrcButtonActionPerformed

    private void plyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plyButtonActionPerformed
        PlayPnl.setVisible(false);
        GamePnlTest.setVisible(true);
        levelNumber = 1;
        testMode = true;
        finished_test_mode = false;
        //set labels not visible

        randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
        randomNumberArrayListLevel.create_arrayList();
        displayNewThings();
    }//GEN-LAST:event_plyButtonActionPerformed

    private void answerButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton5ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(4);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_answerButton5ActionPerformed

    private void nextQuestion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQuestion1ActionPerformed
        if (finished_test_mode == false) {
            if ((levelNumber != 0 && times_answer_button_clicked >= 1) || (start_level_over_again == true)) {
                if (passed_level == true) {
                    level_number_labels_list[levelNumber - 1].setVisible(true);
                    passed_level = false;
                }
                displayNewThings();
                times_answer_button_clicked = 0;
            }
        }
    }//GEN-LAST:event_nextQuestion1ActionPerformed

    private void answerButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton6ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(3);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_answerButton6ActionPerformed

    private void answerButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton7ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(2);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_answerButton7ActionPerformed

    private void answerButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answerButton8ActionPerformed
        if (start_level_over_again != true) {
            times_answer_button_clicked++;
            if (times_answer_button_clicked == 1) {
                increment_right_and_wrong_answers(1);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_answerButton8ActionPerformed

    private void backGamePnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backGamePnlActionPerformed
        reset_GUIs();
        GamePnlPractice.setVisible(false);
        PlayPnl.setVisible(true);

    }//GEN-LAST:event_backGamePnlActionPerformed

    private void backGamePnlTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backGamePnlTestActionPerformed
        reset_GUIs();
        GamePnlTest.setVisible(false);
        PlayPnl.setVisible(true);
    }//GEN-LAST:event_backGamePnlTestActionPerformed

    private void checkScoresBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkScoresBtnActionPerformed
        ScoresPnl.setVisible(true);
        PlayPnl.setVisible(false);
        ScoresWrite.read_file(scoresTextArea);
    }//GEN-LAST:event_checkScoresBtnActionPerformed

    private void scoresPanelBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoresPanelBackActionPerformed
        reset_GUIs();
        ScoresPnl.setVisible(false);
        PlayPnl.setVisible(true);

    }//GEN-LAST:event_scoresPanelBackActionPerformed

    private void userNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextFieldActionPerformed

    }//GEN-LAST:event_userNameTextFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed

    }//GEN-LAST:event_passwordFieldActionPerformed

    private void userNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTextFieldKeyTyped


    }//GEN-LAST:event_userNameTextFieldKeyTyped

    private void userNameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTextFieldKeyReleased
        invalidLabel.setText(" ");
        userName = userNameTextField.getText();
        //trim all spaces
        userName = userName.replaceAll("\\s+","");
        userName = userName.toLowerCase();
        if (userName.equalsIgnoreCase("Teacher") == true) {
            passwordLabel.setVisible(true);
            passwordField.setVisible(true);
        } else { //(userName.equalsIgnoreCase("Teacher") == false
            passwordLabel.setVisible(false);
            passwordField.setVisible(false);
        }
    }//GEN-LAST:event_userNameTextFieldKeyReleased

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        invalidLabel.setText(" ");
    }//GEN-LAST:event_passwordFieldKeyReleased

    private void playPnlBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playPnlBackButtonActionPerformed
        PlayPnl.setVisible(false);
        Log_inPnl.setVisible(true);
        userName = "";
        reset_GUIs();

    }//GEN-LAST:event_playPnlBackButtonActionPerformed

    public final void reset_GUIs() {
        questionText.setText(" ");
        questionText.setLineWrap(true);
        questionText.setWrapStyleWord(true);
        questionText.setEditable(false);

        userMessage.setWrapStyleWord(true);
        userMessage.setLineWrap(true);
        userMessage.setOpaque(false);
        userMessage.setEditable(false);
        userMessage.setFocusable(false);

        questionText1.setText(" ");
        questionText1.setLineWrap(true);
        questionText1.setWrapStyleWord(true);
        questionText1.setEditable(false);
        userMessage1.setWrapStyleWord(true);
        userMessage1.setLineWrap(true);
        userMessage1.setOpaque(false);
        userMessage1.setEditable(false);
        userMessage1.setFocusable(false);

        scoresTextArea.setText(" ");
        scoresTextArea.setLineWrap(true);
        scoresTextArea.setWrapStyleWord(true);
        scoresTextArea.setEditable(false);
        passwordLabel.setVisible(false);
        passwordField.setVisible(false);

        level1button.setBackground(null);
        level2button.setBackground(null);
        level3button.setBackground(null);
        level4button.setBackground(null);
        level5button.setBackground(null);
        jLabel9.setBackground(jPanel1.getBackground());
        jLabel10.setBackground(jPanel1.getBackground());
        jLabel11.setBackground(jPanel1.getBackground());
        jLabel12.setBackground(jPanel1.getBackground());
        jLabel13.setBackground(jPanel1.getBackground());
        jLabel9.setOpaque(true);
        jLabel10.setOpaque(true);
        jLabel11.setOpaque(true);
        jLabel12.setOpaque(true);
        jLabel13.setOpaque(true);

        userNameTextField.setText("");

        passwordField.setText("");
        passwordField.setVisible(false);
        passwordLabel.setVisible(false);
        scoresTextArea.setText("");
        reset_display_new_things();
    }

    public void reset_display_new_things() {
        //reset
        if (testMode == false) {
            userMessage.setText(null);
            for (int i = 0; i < questionImageList.length; i++) {
                //null pointer exception
                questionImageList[i].setIcon(null);
            }
            for (int i = 0; i < answer_button_list.length; i++) {
                answer_button_list[i].setIcon(null);
                answer_button_list[i].setText(null);
            }
            questionText.setText(null);
        } else {
            userMessage1.setText(null);
            for (int i = 0; i < questionImageListTest.length; i++) {
                //null pointer exception
                questionImageListTest[i].setIcon(null);
            }
            for (int i = 0; i < answer_button_list_test.length; i++) {
                answer_button_list_test[i].setIcon(null);
                answer_button_list_test[i].setText(null);
            }
            questionText1.setText(null);
        }

    }

    public void displayNewThings() {

        reset_display_new_things();
        start_level_over_again = false;
        if (randomNumberArrayListLevel.arrayList.isEmpty() == true) {

            randomNumberArrayListLevel = new RandomNumberArrayList(QnA.QarrList[levelNumber - 1].length);
            randomNumberArrayListLevel.create_arrayList();
            display_end_of_level_stuff();
            Right_Answers = 0;
            Wrong_Answers = 0;
            start_level_over_again = true;
        } else {

            random = randomNumberArrayListLevel.return_int(false);
            randomNumberArrayListLevel.remove_int();
            Qdisplay(random, levelNumber);
            GetStoreAndDisplayRandomAnswers(random, levelNumber);

        }

        //display label saying mark, say it will start over
    }

    public void increment_right_and_wrong_answers(int answer_button) {
        //it is not the answer button in the AaarList, it is the new location of it. create
        //an answer list, so answer button - 1 will call the answer list
        if (QnA.stored_answers_for_each_question_arrayList.get(answer_button - 1).isRight()) {
            Right_Answers++;
            if (testMode == false) {
                userMessage.setText("You got the right answer");
            } else {
                userMessage1.setText("You got the right answer");
            }

        } else {
            Wrong_Answers++;
            if (testMode == false) {
                userMessage.setText("You got the wrong answer");
            } else {
                userMessage1.setText("You got the wrong answer");
            }

        }
    }

    public void Qdisplay(int random, int levelNum) {

        QnA.selected = QnA.QarrList[levelNum - 1][random];
        if (QnA.selected.elements != 0) {
            //error here is that there is no imgarr
            for (int i = 0; i < QnA.selected.elements; i++) {
                //null pointer exception
                if (testMode == false) {
                    questionImageList[i].setIcon(QnA.selected.imgarr[i]);
                } else {
                    questionImageListTest[i].setIcon(QnA.selected.imgarr[i]);
                }
            }
        }
        if (testMode == false) {
            questionText.setText(QnA.selected.GetQString());
        } else {
            questionText1.setText(QnA.selected.GetQString());
        }
    }

    public void GetStoreAndDisplayRandomAnswers(int random, int levelNum) {
        QnA.stored_answers_for_each_question_arrayList = new ArrayList<Answer>();
        RandomNumberArrayList randomNumberArrayListOf4 = new RandomNumberArrayList(4);
        randomNumberArrayListOf4.create_arrayList();
        for (int i = 1; i <= answer_button_list.length; i++) {

            int random_col = randomNumberArrayListOf4.return_int(false);
            randomNumberArrayListOf4.remove_int();
            //this code is unique every time, because the list will soon become smaller
            //this works fine
            QnA.selectedA = QnA.AarrList[levelNum - 1][random][random_col];
            QnA.stored_answers_for_each_question_arrayList.add(QnA.selectedA);
            //this or the image code will run
            if (QnA.selectedA.isString() == true) {
                if (testMode == false) {
                    answer_button_list[i - 1].setText(QnA.selectedA.GetAString());
                } else {
                    answer_button_list_test[i - 1].setText(QnA.selectedA.GetAString());
                }

            } else {
                if (testMode == false) {
                    answer_button_list[i - 1].setIcon(QnA.selectedA.GetAImage());
                } else {
                    answer_button_list_test[i - 1].setIcon(QnA.selectedA.GetAImage());
                }

            }
            //answer_button_list[i - 1].setText("a");

        }
    }

    public void display_end_of_level_stuff() {
        if (testMode == true) {
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            double ratio;
            ratio = (double)Right_Answers / (double)QnA.QarrList[levelNumber - 1].length;
            
            String ratio_str = String.format("%02d", Right_Answers) + "/" + String.format("%02d", QnA.QarrList[levelNumber - 1].length);
            String space = "      ";
            String str_to_write = dateFormat.format(date) + space+"Level: " + levelNumber + space+ "Score: " + ratio_str + space+ "User: " + userName; 

            
            //System.out.println(); //2016/11/16 12:08:43

            if (ratio >= 0.8) {
                if (levelNumber == 5) {
                    finished_test_mode = true;
                    end_of_level_message = "You are done the play mode! Congratulations.";
                    //level_number_labels_list[levelNumber -1][1].setVisible(true);
                    level_number_labels_list[levelNumber - 1].setBackground(Color.GREEN);
                    level_number_labels_list[levelNumber - 1].setOpaque(true);

                } else {
                    passed_level = true;
                    end_of_level_message = "Congratulations on passing level " + levelNumber + "!\nClick on next question to go to level " + (levelNumber + 1) + ".";
                    //level_number_labels_list[levelNumber -1][1].setVisible(true);

                    level_number_labels_list[levelNumber - 1].setBackground(Color.GREEN);
                    level_number_labels_list[levelNumber - 1].setOpaque(true);
                    levelNumber++;
                }

            } else {
                end_of_level_message = "Click next question to try level " + levelNumber + " again.\nTry your best to make it to level " + (levelNumber + 1) + ".";
            }

            userMessage1.setText(end_of_level_message);
            //auto save write only when finished level
            try {
                ScoresWrite.write_file(str_to_write);
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else { //test mode == false
            end_of_level_message = "Great job. You answered all the questions for level " + levelNumber + ".\nClick on next question to do the level again.";
            userMessage.setText(end_of_level_message);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GamePnlPractice;
    private javax.swing.JPanel GamePnlTest;
    private javax.swing.JButton LginButton;
    private javax.swing.JPanel Log_inPnl;
    private javax.swing.JPanel PlayPnl;
    private javax.swing.JPanel ScoresPnl;
    private javax.swing.JButton answerButton1;
    private javax.swing.JButton answerButton2;
    private javax.swing.JButton answerButton3;
    private javax.swing.JButton answerButton4;
    private javax.swing.JButton answerButton5;
    private javax.swing.JButton answerButton6;
    private javax.swing.JButton answerButton7;
    private javax.swing.JButton answerButton8;
    private javax.swing.JButton backGamePnl;
    private javax.swing.JButton backGamePnlTest;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton checkScoresBtn;
    private javax.swing.JButton exsrcButton;
    private javax.swing.JLabel invalidLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton level1button;
    private javax.swing.JButton level2button;
    private javax.swing.JButton level3button;
    private javax.swing.JButton level4button;
    private javax.swing.JButton level5button;
    private javax.swing.JButton nextQuestion;
    private javax.swing.JButton nextQuestion1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton playPnlBackButton;
    private javax.swing.JButton plyButton;
    private javax.swing.JLabel questionImage1;
    private javax.swing.JLabel questionImage2;
    private javax.swing.JLabel questionImage3;
    private javax.swing.JLabel questionImage4;
    private javax.swing.JLabel questionImage5;
    private javax.swing.JLabel questionImage6;
    private javax.swing.JLabel questionImage7;
    private javax.swing.JLabel questionImage8;
    private javax.swing.JTextArea questionText;
    private javax.swing.JTextArea questionText1;
    private javax.swing.JButton scoresPanelBack;
    private javax.swing.JTextArea scoresTextArea;
    private javax.swing.JScrollPane scoresTextAreaScrollPane;
    private javax.swing.JTextArea userMessage;
    private javax.swing.JTextArea userMessage1;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables
    //public static final long serialVersionUID = -573087769383165146L;
    Random rand = new Random();
    int levelNumber = 0;
    int difficulty = 0;
    int Right_Answers = 0;
    int Wrong_Answers = 0;
    int random = 0;
    String userName = null;
    JButton[] answer_button_list;
    JButton[] answer_button_list_test;
    RandomNumberArrayList randomNumberArrayListLevel;
    int times_answer_button_clicked = 0;
    boolean start_level_over_again = false;
    JLabel[] questionImageList;
    JLabel[] questionImageListTest;
    String end_of_level_message;
    boolean testMode;
    JLabel[] level_number_labels_list;
    boolean passed_level;
    boolean finished_test_mode;

}
